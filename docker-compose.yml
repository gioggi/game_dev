services:
  # Backend - Laravel API
  backend:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: dev_game_backend
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    depends_on:
      - db
    networks:
      - dev_game_network

  # Nginx for Laravel
  nginx:
    image: nginx:alpine
    container_name: dev_game_nginx
    ports:
      - "8000:80"
    volumes:
      - ./backend:/var/www/html
      - ./docker/nginx/default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - backend
    networks:
      - dev_game_network

  # Frontend - Vue.js
  frontend:
    build:
      context: ./docker/node
      dockerfile: Dockerfile
    container_name: dev_game_frontend
    volumes:
      - ./frontend:/app
    ports:
      - "3010:3010"
    networks:
      - dev_game_network

  # Database - MySQL
  db:
    image: mysql:8.0
    container_name: dev_game_db
    restart: always
    environment:
      MYSQL_DATABASE: dev_game
      MYSQL_ROOT_PASSWORD: root
      MYSQL_USER: dev_game
      MYSQL_PASSWORD: dev_game
    ports:
      - "3301:3306"
    volumes:
      - dev_game_db_data:/var/lib/mysql
    networks:
      - dev_game_network

  # WebSockets server - Laravel Echo Server
  websocket:
    image: node:18
    container_name: dev_game_websocket
    working_dir: /app
    volumes:
      - .:/app
    command: >
      sh -c "npm install && laravel-echo-server start"
    ports:
      - "6001:6001"
    depends_on:
      - redis
    networks:
      - dev_game_network

  # Redis
  redis:
    image: redis:alpine
    container_name: dev_game_redis
    ports:
      - "6379:6379"
    networks:
      - dev_game_network

  # Laravel Scheduler
  scheduler:
    build:
      context: ./docker/php
      dockerfile: Dockerfile
    container_name: dev_game_scheduler
    restart: always
    volumes:
      - ./backend:/var/www/html
    working_dir: /var/www/html
    command: php artisan schedule:work
    depends_on:
      - backend
      - db
    networks:
      - dev_game_network

  # phpMyAdmin for database management
  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: dev_game_phpmyadmin
    environment:
      PMA_HOST: db
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: root
    ports:
      - "8081:80"
    depends_on:
      - db
    networks:
      - dev_game_network

networks:
  dev_game_network:
    driver: bridge

volumes:
  dev_game_db_data:
